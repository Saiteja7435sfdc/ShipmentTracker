/*
*******************************************************************************************
* @Name      : TrackShipmentStatusControllerTest
* @Author    : Sai
* Test Class : 
*******************************************************************************************
* MODIFICATION LOG
* Version       Developer         Date                Description
*-------------------------------------------------------------------------------------------
*   1.0         Sai            04/18/2024          Purpose : Test Class for TrackShipmentStatusController
*******************************************************************************************
*/
@isTest
class TrackShipmentStatusControllerTest {
    @isTest static void testTrackShipmentSuccess() {
        // Mocking the HTTP Callout response
        Test.setMock(HttpCalloutMock.class, new TrackShipmentMockHttpResponseGenerator(true));
        
        User currentUser = [SELECT Id, Name, ProfileId FROM User WHERE Id = :UserInfo.getUserId()];
        
        Test.startTest();
        System.runAs(currentUser){
            Map<String,Object> mapResult = TrackShipmentStatusController.getTrackingStatus(
                new Map<String,Object>{'trackingNumber' => '1234'}
            );
            Assert.areEqual(false, mapResult.get('isCalloutFailed'));
            Assert.areEqual('Shipped- On Time', mapResult.get('status'));
        }
        Test.stopTest();
    }
    
    @isTest static void testTrackShipmentFailed() {
        // Mocking the HTTP Callout response
        Test.setMock(HttpCalloutMock.class, new TrackShipmentMockHttpResponseGenerator(false));
        
        User currentUser = [SELECT Id, Name, ProfileId FROM User WHERE Id = :UserInfo.getUserId()];
        
        Test.startTest();
        System.runAs(currentUser){
            Map<String,Object> mapResult = TrackShipmentStatusController.getTrackingStatus(
                new Map<String,Object>{'trackingNumber' => '1234'}
            );
            Assert.areEqual(true, mapResult.get('isCalloutFailed'));
            Assert.areEqual(null, mapResult.get('status'));
        }
        Test.stopTest();
    }
    
    class TrackShipmentMockHttpResponseGenerator implements HttpCalloutMock {
        Integer statusCode;
        TrackShipmentMockHttpResponseGenerator(Boolean isSuccess) {
            statusCode = isSuccess ? 200 : 400;
        }
        public HttpResponse respond(HttpRequest request) {
            // Create a fake response
            HttpResponse response = new HttpResponse();
            response.setStatusCode(statusCode);
            response.setBody('Shipped- On Time');
            response.setHeader('Content-Type', 'application/json');
            return response;
        }
    }   
}
